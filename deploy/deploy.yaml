---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cds-cloud-controller-manager
  namespace: kube-system
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: cds-cloud-controller-manager
  template:
    metadata:
      labels:
        app: cds-cloud-controller-manager
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      dnsPolicy: Default
      hostNetwork: true
      serviceAccountName: cloud-controller-manager
      tolerations:
      # this taint is set by all kubelets running `--cloud-provider=external`
      # so we should tolerate it to schedule the digitalocean ccm
      - key: "node.cloudprovider.kubernetes.io/uninitialized"
        value: "true"
        effect: "NoSchedule"
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      # cloud controller manages should be able to run on masters
      - key: "node-role.kubernetes.io/master"
        effect: NoSchedule
      containers:
      - image: registry-bj.capitalonline.net/cck/cdscloud-controller-manager:test4
        name: cds-cloud-controller-manager
        imagePullPolicy: Always
        args:
        - "--leader-elect=false"
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: CDS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: cck-secrets
              key: access_key_id
        - name: CDS_ACCESS_KEY_SECRET
          valueFrom:
            secretKeyRef:
              name: cck-secrets
              key: access_key_secret
        - name: CDS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cds-properties
              key: k8s_cluster_id
        - name: CDS_CLUSTER_REGION_ID
          valueFrom:
            configMapKeyRef:
              name: cds-properties
              key: site_id
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloud-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: system:cloud-controller-manager
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - get
  - list
  - watch
  - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:cloud-controller-manager
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: kube-system
